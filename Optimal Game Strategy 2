// GFG - Optimal Game Strategy 2 // leetcode 486
class Solution {
    Integer dp[][];
    int find(int arr[],int i,int j){
        if(i>j) return 0;
        if(dp[i][j]!=null) return dp[i][j];
        return dp[i][j]=Math.max(arr[i]+Math.min(find(arr,i+2,j),find(arr,i+1,j-1)),arr[j]+Math.min(find(arr,i+1,j-1),find(arr,i,j-2)));
    }
    public int maximumAmount(int arr[]) {
        dp=new Integer[arr.length][arr.length];
        return find(arr,0,arr.length-1);
    }
}
