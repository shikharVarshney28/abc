//LC 502 IPO

class Solution {
    public int findMaximizedCapital(int k, int w, int[] profits, int[] capital) {
        int profCap[][] = new int[profits.length][2];
        for (int i = 0; i < profCap.length; i++) {
            profCap[i][0] = capital[i];
            profCap[i][1] = profits[i];
        }
        Arrays.sort(profCap, (a, b) -> a[0] - b[0]);
        PriorityQueue<int[]> pq = new PriorityQueue<>((a, b) -> b[1] - a[1]);
        //add all the profCap with capitals less than equal to w...and pick maxprof
        for (int i = 0; i < profCap.length;) {
            while (i<profCap.length && w >= profCap[i][0]) {
                pq.add(profCap[i]);
                i++;
            }
            if (pq.isEmpty() || k==0)
                return w;
            w += pq.poll()[1];
            k--;
        }
        if(k>0){
            while(pq.size()>0 && k>0){
                w+=pq.poll()[1];
                k--;
            }
        }
        return w;
    }
}
